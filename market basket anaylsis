{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1szbzyJL2u7hmLfPNNKJBgs2sgZIchyjQ","timestamp":1758674776446},{"file_id":"1mjrCN86dql3PKFJhFtaXvnncnS_8PiFa","timestamp":1758674643623}],"authorship_tag":"ABX9TyOacQ36ncVFWVFWw6NS5/31"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":1,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"AJ764eyTKlim","executionInfo":{"status":"ok","timestamp":1758674973317,"user_tz":-330,"elapsed":2235,"user":{"displayName":"Chirag Singhal","userId":"08021789753537712039"}},"outputId":"ad3e2289-fa10-4982-b7e0-ef6614e0a243"},"outputs":[{"output_type":"stream","name":"stdout","text":["One-hot encoded transaction data:\n","    bread  butter    jam   milk\n","0   True    True  False   True\n","1   True    True   True  False\n","2   True   False  False   True\n","3   True    True   True   True\n","4   True    True  False  False\n","\n","Frequent Itemsets:\n","     support         itemsets\n","0  0.857143          (bread)\n","1  0.714286         (butter)\n","2  0.428571            (jam)\n","3  0.714286           (milk)\n","4  0.571429  (butter, bread)\n","5  0.428571     (jam, bread)\n","6  0.571429    (milk, bread)\n","7  0.428571   (butter, milk)\n","\n","Association Rules:\n","   antecedents consequents   support  confidence      lift\n","0       (jam)     (bread)  0.428571         1.0  1.166667\n","1     (bread)       (jam)  0.428571         0.5  1.166667\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.12/dist-packages/jupyter_client/session.py:203: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).\n","  return datetime.utcnow().replace(tzinfo=utc)\n","/usr/local/lib/python3.12/dist-packages/jupyter_client/session.py:203: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).\n","  return datetime.utcnow().replace(tzinfo=utc)\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 800x500 with 1 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"stream","name":"stdout","text":["\n","Business Insights:\n","If a customer buys ['jam'], they are likely to buy ['bread'] (confidence: 1.00, lift: 1.17).\n","If a customer buys ['bread'], they are likely to buy ['jam'] (confidence: 0.50, lift: 1.17).\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.12/dist-packages/jupyter_client/session.py:203: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).\n","  return datetime.utcnow().replace(tzinfo=utc)\n","/usr/local/lib/python3.12/dist-packages/jupyter_client/session.py:203: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).\n","  return datetime.utcnow().replace(tzinfo=utc)\n","/usr/local/lib/python3.12/dist-packages/jupyter_client/session.py:203: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).\n","  return datetime.utcnow().replace(tzinfo=utc)\n","/usr/local/lib/python3.12/dist-packages/jupyter_client/session.py:203: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).\n","  return datetime.utcnow().replace(tzinfo=utc)\n","/usr/local/lib/python3.12/dist-packages/jupyter_client/session.py:203: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).\n","  return datetime.utcnow().replace(tzinfo=utc)\n"]}],"source":["# Market Basket Analysis using Apriori Algorithm\n","import pandas as pd\n","from mlxtend.frequent_patterns import apriori, association_rules\n","import matplotlib.pyplot as plt\n","\n","# 2. Sample Transaction Dataset (Normally load with pd.read_csv)\n","# Example: groceries transactions\n","dataset = [\n","    ['milk', 'bread', 'butter'],\n","    ['bread', 'butter', 'jam'],\n","    ['milk', 'bread'],\n","    ['milk', 'bread', 'butter', 'jam'],\n","    ['bread', 'butter'],\n","    ['milk', 'butter'],\n","    ['milk', 'bread', 'jam']\n","]\n","\n","# Convert to one-hot encoded dataframe\n","from mlxtend.preprocessing import TransactionEncoder\n","te = TransactionEncoder()\n","te_ary = te.fit(dataset).transform(dataset)\n","df = pd.DataFrame(te_ary, columns=te.columns_)\n","\n","print(\"One-hot encoded transaction data:\\n\", df.head())\n","\n","# 3. Apply Apriori Algorithm\n","frequent_itemsets = apriori(df, min_support=0.3, use_colnames=True)\n","print(\"\\nFrequent Itemsets:\\n\", frequent_itemsets)\n","\n","# 4. Generate Association Rules\n","rules = association_rules(frequent_itemsets, metric=\"lift\", min_threshold=1)\n","rules = rules.sort_values(by=\"lift\", ascending=False)\n","print(\"\\nAssociation Rules:\\n\", rules[['antecedents','consequents','support','confidence','lift']])\n","\n","# 5. Visualization: Top 10 Itemsets by Support\n","frequent_itemsets.sort_values(\"support\", ascending=False).head(10).plot(\n","    x='itemsets', y='support', kind='bar', figsize=(8,5), legend=False\n",")\n","plt.title(\"Top 10 Frequent Itemsets\")\n","plt.ylabel(\"Support\")\n","plt.show()\n","\n","# 6. Business Insights (example)\n","print(\"\\nBusiness Insights:\")\n","for idx, row in rules.head(5).iterrows():\n","    print(f\"If a customer buys {list(row['antecedents'])}, they are likely to buy {list(row['consequents'])} \"\n","          f\"(confidence: {row['confidence']:.2f}, lift: {row['lift']:.2f}).\")\n"]}]}